{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { RouteStop } from '../../types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"../../pipes/route-string.pipe\";\nconst _c0 = [\"addressInput\"];\n\nfunction AddressInputComponent_mat_icon_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"svgIcon\", ctx_r1.icon);\n  }\n}\n\nfunction AddressInputComponent_mat_icon_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.icon);\n  }\n}\n\nexport let AddressInputComponent = /*#__PURE__*/(() => {\n  class AddressInputComponent {\n    constructor(dataService) {\n      this.dataService = dataService;\n      this.address = new EventEmitter();\n      this.addressType = 'address';\n    }\n\n    ngOnInit() {\n      switch (this.type) {\n        case RouteStop.WAYPOINT:\n          this.waypointComponentIndex = this.dataService.createWaypointComponent();\n          this.icon = 'dog';\n          break;\n\n        case RouteStop.START:\n          this.icon = 'place';\n          break;\n\n        case RouteStop.END:\n          this.icon = 'map';\n          break;\n      }\n    }\n\n    ngAfterViewInit() {\n      this.addressText.nativeElement.focus();\n      this.setAddress();\n    }\n\n    setAddress() {\n      const outerWellingtonBounds = new google.maps.LatLngBounds( // SouthWest coordinates\n      {\n        lng: 174.5947265625,\n        lat: -41.409775832009544\n      }, // NorthEast coordinates\n      {\n        lng: 175.1495361328125,\n        lat: -41.01099329360267\n      });\n      const autocomplete = new google.maps.places.Autocomplete(this.addressText.nativeElement, {\n        bounds: outerWellingtonBounds,\n        componentRestrictions: {\n          country: 'NZ'\n        },\n        fields: ['address_components', 'geometry'],\n        types: ['address']\n      });\n      google.maps.event.addListener(autocomplete, 'place_changed', () => {\n        const place = autocomplete.getPlace();\n        this.addressSet(place);\n\n        if (this.type === RouteStop.WAYPOINT) {\n          this.dataService.addRoute(place, this.type, this.waypointComponentIndex);\n        } else this.dataService.addRoute(place, this.type);\n      });\n    }\n\n    addressSet(place) {\n      this.address.emit(place);\n      this.dataService.setCenter(place);\n    }\n\n  }\n\n  AddressInputComponent.ɵfac = function AddressInputComponent_Factory(t) {\n    return new (t || AddressInputComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  AddressInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddressInputComponent,\n    selectors: [[\"app-address-input\"]],\n    viewQuery: function AddressInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addressText = _t.first);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    },\n    outputs: {\n      address: \"address\"\n    },\n    decls: 13,\n    vars: 12,\n    consts: [[1, \"addressInputForm\"], [\"appearance\", \"fill\", 1, \"autocompleteForm--field\"], [\"matInput\", \"\", \"placeholder\", \"Ex. 200 Aro st\", \"value\", \"\", 3, \"name\"], [\"addressInput\", \"\"], [1, \"addressInputForm__icon\", 3, \"ngSwitch\"], [\"matSuffix\", \"\", 3, \"svgIcon\", 4, \"ngSwitchCase\"], [\"matSuffix\", \"\", 4, \"ngSwitchDefault\"], [\"matSuffix\", \"\", 3, \"svgIcon\"], [\"matSuffix\", \"\"]],\n    template: function AddressInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"titlecase\");\n        i0.ɵɵpipe(5, \"routeString\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2, 3);\n        i0.ɵɵpipe(8, \"titlecase\");\n        i0.ɵɵpipe(9, \"routeString\");\n        i0.ɵɵelementContainerStart(10, 4);\n        i0.ɵɵtemplate(11, AddressInputComponent_mat_icon_11_Template, 1, 1, \"mat-icon\", 5);\n        i0.ɵɵtemplate(12, AddressInputComponent_mat_icon_12_Template, 2, 1, \"mat-icon\", 6);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(4, 4, i0.ɵɵpipeBind1(5, 6, ctx.type)), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"name\", i0.ɵɵpipeBind1(8, 8, i0.ɵɵpipeBind1(9, 10, ctx.type)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.icon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"dog\");\n      }\n    },\n    directives: [i2.MatFormField, i2.MatLabel, i3.MatInput, i4.NgSwitch, i4.NgSwitchCase, i4.NgSwitchDefault, i5.MatIcon, i2.MatSuffix],\n    pipes: [i4.TitleCasePipe, i6.RouteStringPipe],\n    styles: [\".addressInputForm[_ngcontent-%COMP%]{margin:0 0 -20px;padding:0;box-sizing:border-box;width:100%}.autocompleteForm--field[_ngcontent-%COMP%]{width:100%}.addressInputForm__icon[_ngcontent-%COMP%]{display:inline}\"]\n  });\n  return AddressInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}